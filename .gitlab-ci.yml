stages:
  - build
  - deploy

build:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  script:
    - docker build --pull ./
  only:
    - branches
  except:
    - master

build_review:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - docker build --pull -t "$CI_REGISTRY_IMAGE:dev" ./
    - docker push "$CI_REGISTRY_IMAGE"
  environment:
    name: development
    url: https://beerlog-dev.amiv.ethz.ch
  when: manual
  only:
    - branches
  except:
    - master

deploy_review:
  stage: deploy
  image: amiveth/service-update-helper
  script:
    - export CI_DEPLOY_SERVICE="$CI_DEPLOY_SERVICE_DEV"
    - /update.py
  when: manual
  only:
    - branches
  except:
    - master

build_dev:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - docker build --pull -t "$CI_REGISTRY_IMAGE:dev" ./
    - mkdir -p /$CI_REGISTRY_IMAGE
    - docker save "$CI_REGISTRY_IMAGE:dev" > "/$CI_REGISTRY_IMAGE.dev.tar"
  artifacts:
    paths:
    - /$CI_REGISTRY_IMAGE.dev.tar
    expire_in: 1 week
  only:
    - master

deploy_dev:
  stage: deploy
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - docker load < "/$CI_REGISTRY_IMAGE.dev.tar"
    - docker push "$CI_REGISTRY_IMAGE:dev"
  environment:
    name: development
    url: https://beerlog-dev.amiv.ethz.ch
  only:
    - master

build_push_dev:
  stage: build_push
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - docker build --pull -t "$CI_REGISTRY_IMAGE:dev" ./
    - docker push "$CI_REGISTRY_IMAGE"
    - docker images
  environment:
    name: development
    url: https://beerlog-dev.amiv.ethz.ch
  only:
    - master

deploy_dev:
  stage: deploy
  image: amiveth/service-update-helper
  script:
    - export CI_DEPLOY_SERVICE="$CI_DEPLOY_SERVICE_DEV"
    - /update.py
  only:
    - master

build_push_prod:
  stage: build_push
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - docker build --pull -t "$CI_REGISTRY_IMAGE:latest" ./
    - docker push "$CI_REGISTRY_IMAGE:latest"
    - docker images
  environment:
    name: production
    url: https://beerlog.amiv.ethz.ch
  only:
    - master

deploy_prod:
  stage: deploy
  image: amiveth/service-update-helper
  script:
    - export CI_DEPLOY_SERVICE="$CI_DEPLOY_SERVICE_PROD"
    - /update.py
  only:
    - master
